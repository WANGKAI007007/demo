import tkinter as tk
from tkinter import filedialog
import pandas as pd
import requests
from bs4 import BeautifulSoup
import sys
import os

def main():
    # 创建一个Tkinter窗口
    window = tk.Tk()

    # 添加一个按钮，用于打开文件选择对话框
    def open_file():
        filetypes = (
            ('Excel Files', '*.xlsx'),
            ('All Files', '*.*')
        )
        filename = filedialog.askopenfilename(
            title='Select a file',
            filetypes=filetypes
        )
        if filename:
            # 在标签上显示选择的文件名
            selected_file_label.config(text=filename)
            # 处理Excel文件
            process_excel_file(filename)

    open_button = tk.Button(
        text='选择Excel文件',
        command=open_file
    )

    # 添加一个标签，用于显示选择的文件名
    selected_file_label = tk.Label(
        text='未选择文件'
    )

    # 在窗口上布局按钮和标签
    open_button.pack()
    selected_file_label.pack()

    # 处理Excel文件的函数
    def process_excel_file(filename):
        # 指定要读取的列
        columns_to_read = ['城市', '日期']

        # 指定要写入的列
        columns_to_write = ['温度', '天气', '风力']

        # 读取Excel文件
        df = pd.read_excel(filename, usecols=columns_to_read)

        # 创建一个空的DataFrame，用于存储查找结果
        result_df = pd.DataFrame(columns=columns_to_write)

        # 循环遍历每一行
        for index, row in df.iterrows():
            # 从当前行中获取城市和日期
            city = row['城市']
            date = row['日期']

            # 构造查询URL
            url = f'https://www.tianqi.com/{city}/{date}.html'

            # 发送请求并解析响应
            response = requests.get(url)
            soup = BeautifulSoup(response.text, 'html.parser')

            # 查找温度、天气和风力
            temperature = soup.select('.weather .temp')[0].text
            weather = soup.select('.weather .wea')[0].text
            wind = soup.select('.weather .win')[0].text

            # 将结果添加到result_df中
            result_df = result_df.append({
                '温度': temperature,
                '天气': weather,
                '风力': wind
            }, ignore_index=True)

        # 将结果写入Excel文件
        writer = pd.ExcelWriter(filename)
        df.to_excel(writer, sheet_name='Sheet1', index=False)
        result_df.to_excel(writer, sheet_name='Sheet1', startcol=len(columns_to_read), index=False)
        writer.save()

    # 运行Tkinter窗口
    window.mainloop()

if __name__ == '__main__':
    if getattr(sys, 'frozen', False):
        # 如果是通过PyInstaller打包的可执行文件，则需要修改工作目录
        os.chdir(sys._MEIPASS)
    main()
